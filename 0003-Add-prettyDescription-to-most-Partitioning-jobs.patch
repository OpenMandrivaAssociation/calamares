From c7e4e64dc66db0b1b4d0d7c6091adadc6c7a9b7f Mon Sep 17 00:00:00 2001
From: Teo Mrnjavac <teo@kde.org>
Date: Thu, 9 Apr 2015 15:16:09 +0200
Subject: [PATCH 03/18] Add prettyDescription to most Partitioning jobs.

---
 src/modules/partition/jobs/CreatePartitionJob.cpp     | 19 +++++++++++++++----
 src/modules/partition/jobs/CreatePartitionJob.h       |  2 ++
 .../partition/jobs/CreatePartitionTableJob.cpp        | 10 +++++++++-
 src/modules/partition/jobs/CreatePartitionTableJob.h  |  2 ++
 src/modules/partition/jobs/DeletePartitionJob.cpp     | 10 +++++++++-
 src/modules/partition/jobs/DeletePartitionJob.h       |  2 ++
 src/modules/partition/jobs/FormatPartitionJob.cpp     | 13 ++++++++++++-
 src/modules/partition/jobs/FormatPartitionJob.h       |  2 ++
 src/modules/partition/jobs/ResizePartitionJob.cpp     | 11 +++++++++++
 src/modules/partition/jobs/ResizePartitionJob.h       |  2 ++
 10 files changed, 66 insertions(+), 7 deletions(-)

diff --git a/src/modules/partition/jobs/CreatePartitionJob.cpp b/src/modules/partition/jobs/CreatePartitionJob.cpp
index f2eef3d..517d238 100644
--- a/src/modules/partition/jobs/CreatePartitionJob.cpp
+++ b/src/modules/partition/jobs/CreatePartitionJob.cpp
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -44,10 +45,20 @@ CreatePartitionJob::CreatePartitionJob( Device* device, Partition* partition )
 QString
 CreatePartitionJob::prettyName() const
 {
-    return tr( "Create partition (file system: %1, size: %2 MB) on %3." )
-           .arg( m_partition->fileSystem().name() )
-           .arg( m_partition->capacity() / 1024 / 1024 )
-           .arg( m_device->name() );
+    return tr( "Create new <b>%2MB</b> partition on <b>%3</b> with file system %1." )
+            .arg( m_partition->fileSystem().name() )
+            .arg( m_partition->capacity() / 1024 / 1024 )
+            .arg( m_device->name() );
+}
+
+
+QString
+CreatePartitionJob::prettyDescription() const
+{
+    return tr( "Create new <b>%2MB</b> partition on <b>%3</b> with file system %1." )
+                .arg( m_partition->fileSystem().name() )
+                .arg( m_partition->capacity() / 1024 / 1024 )
+                .arg( m_device->name() );
 }
 
 Calamares::JobResult
diff --git a/src/modules/partition/jobs/CreatePartitionJob.h b/src/modules/partition/jobs/CreatePartitionJob.h
index 6480434..33ad161 100644
--- a/src/modules/partition/jobs/CreatePartitionJob.h
+++ b/src/modules/partition/jobs/CreatePartitionJob.h
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -38,6 +39,7 @@ class CreatePartitionJob : public PartitionJob
 public:
     CreatePartitionJob( Device* device, Partition* partition );
     QString prettyName() const override;
+    QString prettyDescription() const override;
     Calamares::JobResult exec() override;
 
     void updatePreview();
diff --git a/src/modules/partition/jobs/CreatePartitionTableJob.cpp b/src/modules/partition/jobs/CreatePartitionTableJob.cpp
index b238a26..ba0ac8a 100644
--- a/src/modules/partition/jobs/CreatePartitionTableJob.cpp
+++ b/src/modules/partition/jobs/CreatePartitionTableJob.cpp
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -45,7 +46,14 @@ CreatePartitionTableJob::CreatePartitionTableJob( Device* device, PartitionTable
 QString
 CreatePartitionTableJob::prettyName() const
 {
-    return tr( "Create partition table" ); // FIXME
+    return tr( "Create partition table" );
+}
+
+QString CreatePartitionTableJob::prettyDescription() const
+{
+    return tr( "Create new %1 partition table on %2." )
+            .arg( PartitionTable::tableTypeToName( m_type ) )
+            .arg( m_device->deviceNode() );
 }
 
 Calamares::JobResult
diff --git a/src/modules/partition/jobs/CreatePartitionTableJob.h b/src/modules/partition/jobs/CreatePartitionTableJob.h
index 93a6cd1..92235e7 100644
--- a/src/modules/partition/jobs/CreatePartitionTableJob.h
+++ b/src/modules/partition/jobs/CreatePartitionTableJob.h
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -38,6 +39,7 @@ class CreatePartitionTableJob : public Calamares::Job
 public:
     CreatePartitionTableJob( Device* device, PartitionTable::TableType type );
     QString prettyName() const override;
+    QString prettyDescription() const override;
     Calamares::JobResult exec() override;
 
     void updatePreview();
diff --git a/src/modules/partition/jobs/DeletePartitionJob.cpp b/src/modules/partition/jobs/DeletePartitionJob.cpp
index d9ec56f..b29dc2b 100644
--- a/src/modules/partition/jobs/DeletePartitionJob.cpp
+++ b/src/modules/partition/jobs/DeletePartitionJob.cpp
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -38,7 +39,14 @@ DeletePartitionJob::DeletePartitionJob( Device* device, Partition* partition )
 QString
 DeletePartitionJob::prettyName() const
 {
-    return tr( "Delete partition %1" ).arg( m_partition->partitionPath() );
+    return tr( "Delete partition %1." ).arg( m_partition->partitionPath() );
+}
+
+
+QString
+DeletePartitionJob::prettyDescription() const
+{
+    return tr( "Delete partition <b>%1</b>." ).arg( m_partition->partitionPath() );
 }
 
 Calamares::JobResult
diff --git a/src/modules/partition/jobs/DeletePartitionJob.h b/src/modules/partition/jobs/DeletePartitionJob.h
index aabacc9..3d4771e 100644
--- a/src/modules/partition/jobs/DeletePartitionJob.h
+++ b/src/modules/partition/jobs/DeletePartitionJob.h
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -38,6 +39,7 @@ class DeletePartitionJob : public PartitionJob
 public:
     DeletePartitionJob( Device* device, Partition* partition );
     QString prettyName() const override;
+    QString prettyDescription() const override;
     Calamares::JobResult exec() override;
 
     void updatePreview();
diff --git a/src/modules/partition/jobs/FormatPartitionJob.cpp b/src/modules/partition/jobs/FormatPartitionJob.cpp
index d3817be..b706251 100644
--- a/src/modules/partition/jobs/FormatPartitionJob.cpp
+++ b/src/modules/partition/jobs/FormatPartitionJob.cpp
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -48,7 +49,17 @@ FormatPartitionJob::prettyName() const
            .arg( m_partition->partitionPath() )
            .arg( m_partition->fileSystem().name() )
            .arg( m_partition->capacity() / 1024 / 1024 )
-           .arg( m_device->name() );
+            .arg( m_device->name() );
+}
+
+
+QString
+FormatPartitionJob::prettyDescription() const
+{
+    return tr( "Format <b>%3MB</b> partition <b>%1</b> with file system <b>%2</b>." )
+           .arg( m_partition->partitionPath() )
+           .arg( m_partition->fileSystem().name() )
+           .arg( m_partition->capacity() / 1024 / 1024 );
 }
 
 Calamares::JobResult
diff --git a/src/modules/partition/jobs/FormatPartitionJob.h b/src/modules/partition/jobs/FormatPartitionJob.h
index e014389..1bb8453 100644
--- a/src/modules/partition/jobs/FormatPartitionJob.h
+++ b/src/modules/partition/jobs/FormatPartitionJob.h
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -37,6 +38,7 @@ class FormatPartitionJob : public PartitionJob
 public:
     FormatPartitionJob( Device* device, Partition* partition );
     QString prettyName() const override;
+    QString prettyDescription() const override;
     Calamares::JobResult exec() override;
 
     Device* device() const
diff --git a/src/modules/partition/jobs/ResizePartitionJob.cpp b/src/modules/partition/jobs/ResizePartitionJob.cpp
index 4f9bd2e..6fca1fb 100644
--- a/src/modules/partition/jobs/ResizePartitionJob.cpp
+++ b/src/modules/partition/jobs/ResizePartitionJob.cpp
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -186,6 +187,16 @@ ResizePartitionJob::prettyName() const
     return tr( "Resize partition %1." ).arg( partition()->partitionPath() );
 }
 
+
+QString
+ResizePartitionJob::prettyDescription() const
+{
+    return tr( "Resize <b>%2MB</b> partition <b>%1</b> to <b>%3MB</b>." )
+            .arg( partition()->partitionPath() )
+            .arg( partition()->capacity() / 1024 / 1024 )
+            .arg( ( m_newLastSector - m_newFirstSector + 1 ) * partition()->sectorSize() / 1024 / 1024 );
+}
+
 Calamares::JobResult
 ResizePartitionJob::exec()
 {
diff --git a/src/modules/partition/jobs/ResizePartitionJob.h b/src/modules/partition/jobs/ResizePartitionJob.h
index d1b5593..8952745 100644
--- a/src/modules/partition/jobs/ResizePartitionJob.h
+++ b/src/modules/partition/jobs/ResizePartitionJob.h
@@ -1,6 +1,7 @@
 /* === This file is part of Calamares - <http://github.com/calamares> ===
  *
  *   Copyright 2014, Aurélien Gâteau <agateau@kde.org>
+ *   Copyright 2015, Teo Mrnjavac <teo@kde.org>
  *
  *   Calamares is free software: you can redistribute it and/or modify
  *   it under the terms of the GNU General Public License as published by
@@ -36,6 +37,7 @@ class ResizePartitionJob : public PartitionJob
 public:
     ResizePartitionJob( Device* device, Partition* partition, qint64 firstSector, qint64 lastSector );
     QString prettyName() const override;
+    QString prettyDescription() const override;
     Calamares::JobResult exec() override;
 
     void updatePreview();
-- 
1.9.0

