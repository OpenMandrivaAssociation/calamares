From 0153f89751f71d4ee219184721984208390ea559 Mon Sep 17 00:00:00 2001
From: Gabriel Craciunescu <crazy@frugalware.org>
Date: Thu, 24 Jan 2019 18:10:12 +0100
Subject: [PATCH] services-systemd: support sockets/timers and unmask

   Added support to enable/disable timers and sockets
   Added unmask support too.

   Please NOTE some .service *need* when enabled/disabled
   enable or disable the socket file too. Some can do that
   by dependecies in the unit files some cannot ( aliases , dbus ones ),
   meaning if we disable foo.service but foo.socket , foo.socket can start
   foo.service again.

   Also timers support and unmask is useful for ISO's with the default
   rsync method. As example one may want to disable package manager
   check for updates timer on the installation media while enable on
   final installation again. Same would be true for some audit and
   alike noisy services have no meaning on Live and can be masked
   to speed up boot etc but then unmaksed in final installation.

   With all these added now only 'preset' support is left out.
---
 src/modules/services-systemd/main.py          | 22 ++++++++++++-
 .../services-systemd/services-systemd.conf    | 31 ++++++++++++++++++-
 2 files changed, 51 insertions(+), 2 deletions(-)

diff --git a/src/modules/services-systemd/main.py b/src/modules/services-systemd/main.py
index 09263b9f0..291ab3811 100644
--- a/src/modules/services-systemd/main.py
+++ b/src/modules/services-systemd/main.py
@@ -7,6 +7,7 @@
 #   Copyright 2014, Teo Mrnjavac <teo@kde.org>
 #   Copyright 2017, Alf Gaida <agaida@siduction.org>
 #   Copyright 2018, Adriaan de Groot <groot@kde.org>
+#   Copyright 2019, Gabriel Craciunescu <crazy@frugalware.org>
 #
 #   Calamares is free software: you can redistribute it and/or modify
 #   it under the terms of the GNU General Public License as published by
@@ -71,11 +72,19 @@ def run():
     # here will work in a chroot; in fact, they are the only systemctl commands
     # that support that, see:
     # http://0pointer.de/blog/projects/changing-roots.html
-
+    # (NOTE: only 'preset' support is left out for now.)
     r = systemctl(cfg.get("services", []), "enable", ".service")
     if r is not None:
         return r
 
+    r = systemctl(cfg.get("sockets", []), "enable", ".socket")
+    if r is not None:
+        return r
+
+    r = systemctl(cfg.get("timers", []), "enable", ".timer")
+    if r is not None:
+        return r
+
     r = systemctl(cfg.get("targets", []), "enable", ".target")
     if r is not None:
         return r
@@ -88,10 +97,21 @@ def run():
     if r is not None:
         return r
 
+    r = systemctl(cfg.get("disable-sockets", []), "disable", ".socket")
+    if r is not None:
+        return r
+
+    r = systemctl(cfg.get("disable-timers", []), "disable", ".timer")
+    if r is not None:
+        return r
+
     r = systemctl(cfg.get("mask", []), "mask", "")
     if r is not None:
         return r
 
+    r = systemctl(cfg.get("unmask", []), "unmask", "")
+    if r is not None:
+        return r
 
     # This could have just been return r
     return None
diff --git a/src/modules/services-systemd/services-systemd.conf b/src/modules/services-systemd/services-systemd.conf
index 6ff1409bf..e5897e5b6 100644
--- a/src/modules/services-systemd/services-systemd.conf
+++ b/src/modules/services-systemd/services-systemd.conf
@@ -43,6 +43,16 @@
 #   - name: "graphical"
 #     mandatory: true
 #
+# # Enables <name>.socket
+# sockets:
+#   - name: "some-socket"
+#     mandatory: false
+#
+# # Enables <name>.timer
+# timers:
+#   - name: "some-timer"
+#     mandatory: true
+#
 # # Disables <name>.service
 # disable:
 #   - name: "pacman-init"
@@ -53,6 +63,16 @@
 # disable-targets:
 #   - graphical
 #
+# # Disables <name>.socket
+# #     .. this shows how to use just the name
+# disable-sockets:
+#   - some-socket
+#
+# # Disables <name>.timer
+# #     .. this shows how to use just the name
+# disable-timers:
+#   - some-timer
+#
 # # Masks (stronger version of disable). This section
 # # is unusual because you **must** include the suffix
 # # (e.g. ".service") as part of the name, so, e.g. to mask
@@ -61,10 +81,19 @@
 # mask:
 #  - name: "NetworkManager.service"
 #  - mandatory: true
-
+#
+# unmask:
+#  - name: "some.socket"
+#  - mandatory: true
+#
 # By default, no changes are made.
 services: []
+sockets: []
+timers: []
 targets: []
 disable: []
 disable-targets: []
+disable-sockets: []
+disable-timers: []
 mask: []
+unmask: []
-- 
2.20.1

